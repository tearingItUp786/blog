name: 🚀 Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      manual_run:
        description: 'Manually run'
        required: true
        type: choice
        default: 'true'
        options:
          - 'true'
          - 'false'

jobs:
  changes:
    name: 🔎 Determine deployable changes
    runs-on: ubuntu-latest
    outputs:
      DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}
      DEPLOYABLE_MANUAL: ${{ inputs.manual_run }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🔎 Determine deployable changes
        id: changes
        run: |
          echo "DEPLOYABLE=$(node ./other/is-deployable.cjs)" >> $GITHUB_OUTPUT
      - name: ❓ Deployable
        run: |
          echo "DEPLOYABLE: ${{ steps.changes.outputs.DEPLOYABLE }}"
  lint:
    name: ⬣ ESLint
    needs: [changes]
    if:
      needs.changes.outputs.DEPLOYABLE == 'true' ||
      needs.changes.outputs.DEPLOYABLE_MANUAL == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ :TypeScript
    needs: [changes]
    if:
      needs.changes.outputs.DEPLOYABLE == 'true' ||
      needs.changes.outputs.DEPLOYABLE_MANUAL == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [changes, lint, typecheck]
    # only build/deploy main branch on pushes
    if:
      ${{ (needs.changes.outputs.DEPLOYABLE == 'true') && (github.ref ==
      'refs/heads/main') && (github.event_name == 'push') }} ||
      (needs.changes.outputs.DEPLOYABLE_MANUAL == 'true')

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1.4

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run:
          flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
          --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🥬 Refresh Content
        run: node ./other/refresh-content.cjs
        env:
          REFRESH_CACHE_SECRET: ${{ secrets.REFRESH_CACHE_SECRET }}
          NODE_ENV: production

      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

  refresh:
    name: 🥬 Refresh Content
    if: needs.changes.outputs.DEPLOYABLE != 'true'
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 🥬 Refresh Content
        run: node ./other/refresh-content.cjs
        env:
          REFRESH_CACHE_SECRET: ${{ secrets.REFRESH_CACHE_SECRET }}
          NODE_ENV: production

  purge:
    name: 💨 Purge Cache
    if: needs.changes.outputs.DEPLOYABLE != true
    runs-on: ubuntu-latest
    needs: [changes, refresh]
    steps:
      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}

          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

  notify:
    name: 📞 Notify Taran
    runs-on: ubuntu-latest
    needs: [purge, deploy]
    # this will fire the notify job if purge or deploy have happened
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
    steps:
      - name: ntfy_action
        uses: niniyas/ntfy-action@master
        with:
          url: https://ntfy.sh
          topic: ${{ secrets.NOTIFY_TOPIC }}
          details: Finished deploying github action
